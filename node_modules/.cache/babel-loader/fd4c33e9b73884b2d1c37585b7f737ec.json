{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Udemy\\\\Food Delivery App\\\\01-starting-project\\\\src\\\\store\\\\Cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartItem = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const presentCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingItem = state.item[presentCartItemIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      console.log(updatedItem);\n      updatedItems = [...state.item];\n      updatedItems[presentCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.item.concat(action.item);\n    }\n\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const presentCartItemIndex = state.item.findIndex(item => item.id === action.id);\n    const existingItem = state.item[presentCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.updatedItems.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingItem] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return cartItem;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, cartItem);\n\n  const addItemToCart = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"9uJzaG15P03EHiipJnBsvwtgbME=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/React Udemy/Food Delivery App/01-starting-project/src/store/Cart-provider.js"],"names":["React","useReducer","CartContext","cartItem","item","totalAmount","cartReducer","state","action","type","updatedTotalAmount","price","amount","presentCartItemIndex","findIndex","id","existingItem","updatedItems","updatedItem","console","log","concat","filter","items","CartProvider","props","cartState","dispatchCart","addItemToCart","removeItemFromCart","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,QAAQ,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,WAAW,EAAE;AAAzB,CAAjB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYO,KAAZ,GAAoBH,MAAM,CAACJ,IAAP,CAAYQ,MADtD;AAGA,UAAMC,oBAAoB,GAAGN,KAAK,CAACH,IAAN,CAAWU,SAAX,CAC1BV,IAAD,IAAUA,IAAI,CAACW,EAAL,KAAYP,MAAM,CAACJ,IAAP,CAAYW,EADP,CAA7B;AAGA,UAAMC,YAAY,GAAGT,KAAK,CAACH,IAAN,CAAWS,oBAAX,CAArB;AAEA,QAAII,YAAJ;;AAEA,QAAID,YAAJ,EAAkB;AAChB,YAAME,WAAW,GAAG,EAClB,GAAGF,YADe;AAElBJ,QAAAA,MAAM,EAAEI,YAAY,CAACJ,MAAb,GAAsBJ,MAAM,CAACJ,IAAP,CAAYQ;AAFxB,OAApB;AAIAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAD,MAAAA,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACH,IAAV,CAAf;AACAa,MAAAA,YAAY,CAACJ,oBAAD,CAAZ,GAAqCK,WAArC;AACD,KARD,MAQO;AACLD,MAAAA,YAAY,GAAGV,KAAK,CAACH,IAAN,CAAWiB,MAAX,CAAkBb,MAAM,CAACJ,IAAzB,CAAf;AACD;;AAED,WAAO;AACLA,MAAAA,IAAI,EAAEa,YADD;AAELZ,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAMI,oBAAoB,GAAGN,KAAK,CAACH,IAAN,CAAWU,SAAX,CAC1BV,IAAD,IAAUA,IAAI,CAACW,EAAL,KAAYP,MAAM,CAACO,EADF,CAA7B;AAGA,UAAMC,YAAY,GAAGT,KAAK,CAACH,IAAN,CAAWS,oBAAX,CAArB;AACA,UAAMH,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBW,YAAY,CAACL,KAA5D;AACA,QAAIM,YAAJ;;AACA,QAAID,YAAY,CAACJ,MAAb,KAAwB,CAA5B,EAA+B;AAC7BK,MAAAA,YAAY,GAAGV,KAAK,CAACU,YAAN,CAAmBK,MAAnB,CAA2BlB,IAAD,IAAUA,IAAI,CAACW,EAAL,KAAYP,MAAM,CAACO,EAAvD,CAAf;AACD,KAFD,MAEO;AACL,YAAMG,WAAW,GAAG,EAAE,GAAGF,YAAL;AAAmBJ,QAAAA,MAAM,EAAEI,YAAY,CAACJ,MAAb,GAAsB;AAAjD,OAApB;AACAK,MAAAA,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACH,IAAV,CAAf;AACAa,MAAAA,YAAY,CAACD,YAAD,CAAZ,GAA6BE,WAA7B;AACD;;AACD,WAAO;AACLK,MAAAA,KAAK,EAAEN,YADF;AAELZ,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,SAAOP,QAAP;AACD,CAjDD;;AAkDA,MAAMqB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B1B,UAAU,CAACK,WAAD,EAAcH,QAAd,CAA5C;;AACA,QAAMyB,aAAa,GAAIxB,IAAD,IAAU;AAC9BuB,IAAAA,YAAY,CAAC;AAAElB,MAAAA,IAAI,EAAE,KAAR;AAAeL,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAMyB,kBAAkB,GAAId,EAAD,IAAQ;AACjCY,IAAAA,YAAY,CAAC;AAAElB,MAAAA,IAAI,EAAE,QAAR;AAAkBM,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMe,WAAW,GAAG;AAClB1B,IAAAA,IAAI,EAAEsB,SAAS,CAACtB,IADE;AAElBC,IAAAA,WAAW,EAAEqB,SAAS,CAACrB,WAFL;AAGlB0B,IAAAA,OAAO,EAAEH,aAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst cartItem = { item: [], totalAmount: 0 };\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const presentCartItemIndex = state.item.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingItem = state.item[presentCartItemIndex];\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem) {\r\n      const updatedItem = {\r\n        ...existingItem,\r\n        amount: existingItem.amount + action.item.amount,\r\n      };\r\n      console.log(updatedItem);\r\n      updatedItems = [...state.item];\r\n      updatedItems[presentCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.item.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      item: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const presentCartItemIndex = state.item.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.item[presentCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.updatedItems.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.item];\r\n      updatedItems[existingItem] = updatedItem;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return cartItem;\r\n};\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCart] = useReducer(cartReducer, cartItem);\r\n  const addItemToCart = (item) => {\r\n    dispatchCart({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemFromCart = (id) => {\r\n    dispatchCart({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    item: cartState.item,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCart,\r\n    removeItem: removeItemFromCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}