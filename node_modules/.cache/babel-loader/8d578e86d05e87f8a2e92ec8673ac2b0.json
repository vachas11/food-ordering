{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Udemy\\\\Food Delivery App\\\\01-starting-project\\\\src\\\\store\\\\Cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartItem = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.item.concat(action.item);\n    const newTotalAmount = state.totalAmount + action.item.price * action.item.totalAmount;\n    console.log(\"new\", +state.totalAmount);\n    return {\n      item: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {}\n\n  return cartItem;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, cartItem);\n\n  const addItemToCart = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"9uJzaG15P03EHiipJnBsvwtgbME=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/React Udemy/Food Delivery App/01-starting-project/src/store/Cart-provider.js"],"names":["React","useReducer","CartContext","cartItem","item","totalAmount","cartReducer","state","action","type","updatedItems","concat","newTotalAmount","price","console","log","CartProvider","props","cartState","dispatchCart","addItemToCart","removeItemFromCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,QAAQ,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,WAAW,EAAE;AAAzB,CAAjB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,IAAN,CAAWO,MAAX,CAAkBH,MAAM,CAACJ,IAAzB,CAArB;AACA,UAAMQ,cAAc,GAClBL,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYS,KAAZ,GAAoBL,MAAM,CAACJ,IAAP,CAAYC,WADtD;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,CAACR,KAAK,CAACF,WAA1B;AACA,WAAO;AAAED,MAAAA,IAAI,EAAEM,YAAR;AAAsBL,MAAAA,WAAW,EAAEO;AAAnC,KAAP;AACD;;AACD,MAAIJ,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B,CAC7B;;AACD,SAAON,QAAP;AACD,CAZD;;AAaA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACK,WAAD,EAAcH,QAAd,CAA5C;;AACA,QAAMiB,aAAa,GAAIhB,IAAD,IAAU;AAC9Be,IAAAA,YAAY,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeL,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAMiB,kBAAkB,GAAIC,EAAD,IAAQ;AACjCH,IAAAA,YAAY,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBnB,IAAAA,IAAI,EAAEc,SAAS,CAACd,IADE;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,OAAO,EAAEJ,aAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArBD;;GAAMV,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst cartItem = { item: [], totalAmount: 0 };\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.item.concat(action.item);\r\n    const newTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.totalAmount;\r\n\r\n    console.log(\"new\", +state.totalAmount);\r\n    return { item: updatedItems, totalAmount: newTotalAmount };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n  }\r\n  return cartItem;\r\n};\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCart] = useReducer(cartReducer, cartItem);\r\n  const addItemToCart = (item) => {\r\n    dispatchCart({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemFromCart = (id) => {\r\n    dispatchCart({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    item: cartState.item,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCart,\r\n    removeItem: removeItemFromCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}